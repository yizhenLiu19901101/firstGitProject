<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="300" /> 
        <property name="maxActive" value="600" />  
        <property name="maxWait" value="100" /> 
        <property name="testOnBorrow" value="true" />  
    </bean>  
      
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="127.0.0.1" p:port="6379" p:password=""  p:pool-config-ref="poolConfig" p:database="3"/>  
      
    <!-- 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 -->
    <bean id="redisCacheTransfer" class="com.yizhen.demo.cache.RedisCacheTransfer">
        <property name="jedisConnectionFactory" ref="connectionFactory"/>
    </bean>
    <!-- 使用最简单的方式使用缓存 -->
    <!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
        </property> 
    </bean> -->
    
  <!-- 使用最简单的方式使用redis缓存 -->  
  <!-- <bean id="cityDao" class="com.yizhen.demo.dao.CityDaoImpl">
        <property name="redisTemplate" ref="redisTemplate"></property>
    </bean> -->
</beans>
